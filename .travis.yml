language: python
dist: bionic

matrix:
  fast_finish: true
  include:
  - os: osx
    osx_image: xcode10.1
    env: COMP_EVAL="OS=osx && COMP_CC=gcc-9 && COMP_CXX=g++-9"
    language: generic

  - os: linux
    addons:
      apt:
        sources: 
        - ubuntu-toolchain-r-test
        packages: 
        - libhdf5-serial-dev
        - openmpi-bin
        - libopenmpi-dev
    env: COMP_EVAL="OS=linux && COMP_CC=gcc-7 && COMP_CXX=g++-7"
    python: 3.7

  - os: linux
    addons:
      apt:
        sources: 
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-5.0
        packages: 
        - libhdf5-serial-dev
        - openmpi-bin
        - libopenmpi-dev
    env: COMP_EVAL="OS=linux && COMP_CC=clang-5.0 && COMP_CXX=clang++-5.0"
    python: 3.7

    #  allow_failures:
    #    - env: COMP_EVAL="OS=linux && COMP_CC=gcc-9 && COMP_CXX=g++-9"
    #    - env: COMP_EVAL="OS=linux && COMP_CC=clang-5.0 && COMP_CXX=clang++-5.0"


addons:
    apt:
        update: true
    homebrew:
        update: false

cache:
    apt: true


before_install:
  - eval "${COMP_EVAL}"
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install gcc@9 hdf5 open-mpi fftw fmt; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; export CC=${COMP_CC}; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; export CXX=${COMP_CXX}; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; export CC=mpicc; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; export CXX=mpic++; fi

before_script:
  - export MPI="openmpi40"
  - export CC=mpicc
  - export CXX=mpic++
  - $CC --version
  - $CXX --version
  - mpicc --version
  - mpic++ --version
  - echo $PATH
  - pip3 install -r requirements.txt
  - export RUNKO=$(pwd)
  - export PYTHONPATH=$PYTHONPATH:$RUNKO/corgi/lib
  - export PYTHONPATH=$PYTHONPATH:$RUNKO/lib
  - export PYTHONPATH=$PYTHONPATH:$RUNKO/python
  - export PYTHONPATH=$PYTHONPATH:$RUNKO/analysis
  - echo $PYTHONPATH


script:
  - mkdir build && cd build 
  - cmake .. 
  - make
